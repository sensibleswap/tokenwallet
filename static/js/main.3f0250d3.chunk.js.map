{"version":3,"sources":["web3/wallet.ts","lib/util.ts","lib/index.ts","state/state.ts","state/action.ts","hooks.js","App.js","reportWebVitals.js","index.js"],"names":["NetWork","div","a","biga","BigNumber","i","toString","multi","multipliedBy","plus","minus","getDecimalString","decimalNum","pow","lessThan","b","lt","lessThanEqual","lte","greaterThan","gt","greaterThanEqual","gte","checkFeeRate","tx","minFeeRate","size","toBuffer","length","feeRate","getFee","msg","message","error","Error","safeJsonStringify","data","JSON","parse","stringify","key","value","getSensibleApiPrefix","network","test","Mainnet","isSensibleSuccess","res","code","sleep","ms","Promise","resolve","setTimeout","formatValue","decimal","util","isValidAddress","address","bsv","Address","_","generateKeysFromEmailPassword","email","pass","Testnet","s","regchars","match","regupchars","regnums","bufferS","Buffer","from","crypto","Hash","sha256","tmp","hex","privateKey","PrivateKey","toAddress","publicKey","toPublicKey","getSensibleFtHistoryUrl","genesis","codehash","getWocAddressUrl","url","getWocTransactionUrl","txid","signAnyTx","options","txHex","scriptHex","inputIndex","satoshis","Transaction","script","Script","fromBuffer","sig","toHex","signTx","toASM","Number","getAddressSensibleFtList","pageSize","page","getAddressSensibleFtListByPage","list","console","log","apiPrefix","axios","get","map","item","tokenName","name","tokenSymbol","symbol","tokenDecimal","balance","pendingBalance","getAddressBsvUtxoList","cursor","txId","outputIndex","vout","satoshi","getAddressBsvBalanceByUtxo","sum","utxoList","total","reduce","prev","cur","broadcastSensibleQeury","rawtx","apiPrefx","post","hash","mapBsvFeeError","err","getCustomSigners","findValue","customSatotxList","find","satotxList","selectNotNullSigners","signerList","signers","transferSensibleFt","senderWif","receivers","utxos","noBroadcast","customSigner","SensibleFT","selectSigners","selectRes","ft","purse","feeb","signerSelecteds","transfer","routeCheckTx","txParseRes","parseTransaction","serialize","outputs","errMsg","isBsvAmountExceed","indexOf","isFtUtxoAmountExceed","mergeBsvUtxo","merge","ownerWif","Signature","sighashType","SIGHASH_ALL","SIGHASH_FORKID","unlockP2PKHInput","sigtype","prevTxId","inputs","signature","Sighash","sign","output","satoshisBN","setScript","buildPublicKeyHashIn","toDER","checkBsvReceiversSatisfied","satified","txAddressAmountMap","getKey","amount","forEach","rece","transferBsv","allUtxos","totalOutput","utxoValue","selectedUtxoList","feePerKb","dust","utxoResList","push","addInput","Input","PublicKeyHash","Output","buildPublicKeyHashOut","empty","to","change","clearOutputs","index","type","Sentry","fee","utxolist","parseTokenContractScript","scriptBuf","parsed","parseTokenScript","input","ftToken","ret","addr","tokenAmount","isFt","ftDetail","tokenAddress","window","defaultSatotx","satotxApiPrefix","satotxPubKey","initialState","account","bsvBalance","sensibleFtList","satotxConfigMap","Map","set","createGlobalState","useGlobalState","getGlobalState","setGlobalState","accountStorageKey","saveAccountStorage","str","localStorage","setItem","getAccountStorage","getItem","isSupportToken","isSupportedToken","pollingBsvTimer","pollingSensibleFtTimer","pollingBsvBalance","clearInterval","fn","setInterval","pollingSensibleFtBalance","valid_sensibleFtList","filter","saveAccount","password","top","hashdata","decodeURIComponent","location","substr","postMsg","createPostMsg","id","preAccount","preBsvBalance","preSensibleFtBalance","accountKey","emit","isBsvBalanceEqual","b1","b2","isSensibleFtBalanceEqual","sort","item1","item2","localeCompare","isAccountEqual","requestLatestData","latestAccount","latestBalance","equal","handleRequest","method","on","eventData","requestId","params","response","PublicKey","signed","useOnceCall","cb","condition","isCalledRef","useRef","useEffect","current","Option","Select","Header","useState","decodeModalVisible","setDecodeModalVisible","setRawtx","setNetwork","resultModalVisible","setResultModalVisible","className","title","content","onClick","actions","open","visible","onCancel","TextArea","rows","onChange","e","target","style","width","placeholder","LoginPanel","Form","useForm","form","bordered","layout","onFinish","Modal","confirm","href","rel","onOk","getFieldsValue","Item","rules","required","prefix","UserOutlined","min","transform","trim","Password","LockOutlined","visibilityToggle","label","htmlType","AccountInfoPanel","onWithDraw","onTransfer","handleTransfer","margin","justify","span","itemLayout","dataSource","renderItem","placement","Meta","description","height","display","alignItems","getRabinPubKeys","getRabins","rabinApis","promises","rabins","rabinApi","all","then","pubKey","TransferAllPanel","initDatas","onTransferCallback","loading","setLoading","values","isBsv","token","setFieldsValue","handleSubmit","receiverLists","broadcastBsv","formatReceiverList","transferRes","broadcastSensibleFt","broadcastBsvAndToken","txs","totalOutputValueFloatDuck","totalOutputValue","wif","txInfo","LeftOutlined","formatBalance","canEdit","fontWeight","List","fields","add","remove","fieldKey","restField","marginBottom","align","validator","reject","disabled","shape","icon","MinusOutlined","PlusOutlined","block","TransferPanel","initReceivers","receiverList","success","App","trasfering","setTransfering","trasferSensibleFtGenesis","setTrasferSensibleFtGenesis","setInitReceivers","setInitDatas","initRabins","setRabins","handleCancelTransfer","getHashData","opener","handlePopResponseCallback","resObj","requestAccountCondition","transferBsvCondition","outputTotal","datas","v","obu","onbeforeunload","event","overflow","accountName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","originBroadcast","SensibleApi","prototype","broadcast","txMsg","call","this","newError","isIframe","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f0250d3.chunk.js","sourcesContent":["\nexport enum NetWork {\n  Testnet = 'testnet',\n  Mainnet = 'mainnet',\n  STN = 'STN'\n}\n\n","import BigNumber from \"bignumber.js\";\nimport {message} from 'antd'\n\n// 最大是253，那么全部用 string 吧\ntype NumberDuck = number | string\n\nexport function div (a: NumberDuck, ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.div(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function multi(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.multipliedBy(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function plus(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.plus(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function minus(a: NumberDuck,  ...others: NumberDuck[]): string {\n    let biga = new BigNumber(a)\n    for (let i = 0; i < others.length; i++) {\n        biga = biga.minus(new BigNumber(others[i]))\n    }\n    return biga.toString()\n}\n\nexport function getDecimalString(decimalNum: number): string {\n    return new BigNumber(10).pow(decimalNum).toString()\n}\n\nexport function lessThan(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.lt(new BigNumber(b))\n}\n\nexport function lessThanEqual(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.lte(new BigNumber(b))\n}\n\nexport function greaterThan(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.gt(new BigNumber(b))\n}\n\nexport function greaterThanEqual(a: NumberDuck, b: NumberDuck):boolean {\n    let biga = new BigNumber(a)\n    return biga.gte(new BigNumber(b))\n}\n\nexport function equal(a: NumberDuck, b: NumberDuck): boolean {\n    let biga = new BigNumber(a)\n    return biga.eq(new BigNumber(b))\n}\n\nexport function toString(a: NumberDuck): string {\n    return new BigNumber(a).toString()\n}\n\nexport function checkFeeRate(tx: any, minFeeRate?: number) {\n    minFeeRate = minFeeRate || 0.5\n    const size = tx.toBuffer().length\n    const feeRate = tx.getFee() / size;\n    if (feeRate < minFeeRate) {\n        const msg = `The fee rate should not be less than ${minFeeRate}, but in the end it is ${feeRate}`\n        message.error(msg)\n        throw new Error(msg)\n    }\n}\n\nexport function safeJsonStringify(data: any) {\n    return JSON.parse(JSON.stringify(data, (key, value) =>\n        typeof value === 'bigint'\n            ? value.toString()\n            : value // return everything else unchanged\n    ));\n}\n\n// 传过来 string/int -> 显示(float) -> bigint\n","import { bsv, toHex, signTx } from 'scryptlib';\nimport { NetWork } from '../web3';\nimport {Key, SensibleFt, SensibleSatotx, TransferReceiver, BsvUtxo} from '../state/stateType'\nimport axios from 'axios'\nimport {SensibleFT} from 'sensible-sdk'\nimport * as util from './util'\nimport * as Sentry from \"@sentry/react\";\nimport customSatotxList from './customSatotx.json'\n\nfunction getSensibleApiPrefix(network: NetWork) {\n    const test = network === NetWork.Mainnet ? '' : '/test'\n    return `https://api.sensiblequery.com${test}`\n}\nfunction isSensibleSuccess(res: any) {\n    return res.code === 0 && res.msg === 'ok'\n}\n\nfunction sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport function formatValue(value: number, decimal: number) {\n    // const bigNum = bsv.crypto.BN.fromNumber(value)\n    // return bigNum.div(10**decimal).toString(10)\n    // return value / (10**decimal)\n    return util.div(value, util.getDecimalString(decimal))\n}\n\nexport function isValidAddress(network: NetWork, address: string) {\n    try {\n        new bsv.Address(address, network)\n        return true\n    } catch (_) {\n        return false\n    }\n}\n\nexport function generateKeysFromEmailPassword(email: string, pass: string, network: NetWork = NetWork.Testnet): Key {\n    let s: string = email\n    s += '|'+pass+'|';\n    s += s.length+'|!@'+((pass.length*7)+email.length)*7;\n    var regchars = (pass.match(/[a-z]+/g)) ? pass.match(/[a-z]+/g)!.length : 1;\n    var regupchars = (pass.match(/[A-Z]+/g)) ? pass.match(/[A-Z]+/g)!.length : 1;\n    var regnums = (pass.match(/[0-9]+/g)) ? pass.match(/[0-9]+/g)!.length : 1;\n    s += ((regnums+regchars)+regupchars)*pass.length+'3571';\n    s += (s+''+s);\n\n    let bufferS = Buffer.from(s)\n    bufferS = bsv.crypto.Hash.sha256(bufferS)\n\tfor(let i=0;i<=49;i++){\n        const tmp = Buffer.from(bufferS.toString('hex'))\n        bufferS = bsv.crypto.Hash.sha256(tmp)\n\t}\n    const hex = bsv.crypto.Hash.sha256(Buffer.from(bufferS.toString('hex'))).toString('hex')\n    \n    const privateKey = new bsv.PrivateKey(hex, network)\n    const address = privateKey.toAddress(network).toString()\n    \n    return {\n        address,\n        privateKey: privateKey.toString(),\n        publicKey: privateKey.toPublicKey().toString()\n    }\n}\n\nexport function getSensibleFtHistoryUrl(network: NetWork, address: string, genesis: string, codehash: string) {\n    // https://sensiblequery.com/#/ft/utxo/a1961d0c0ab39f1bd0f79c2f6ae27138cca0620c/d4266deb03b5fdb7c9af39fa71f86f4b1f6390422e9bcd1556399a3f0063965f00000000/1111111111111111111114oLvT2\n    const test = network === NetWork.Mainnet ? '' : '/test'\n    return `https://sensiblequery.com${test}/#/ft/utxo/${codehash}/${genesis}/${address}`\n}\n\n\nexport function getWocAddressUrl(network: NetWork, address: string) {\n    let url = ''\n    if (network === NetWork.Mainnet) {\n        url = 'https://whatsonchain.com/address/'\n    } \n    if (network === NetWork.Testnet) {\n        url = 'https://test.whatsonchain.com/address/'\n    }\n    if (!url) {\n        return url\n    }\n    url += address\n    return url\n}\n\nexport function getWocTransactionUrl(network: NetWork, txid: string) {\n    let url = ''\n    if (network === NetWork.Mainnet) {\n        url = 'https://whatsonchain.com/tx/'\n    } \n    if (network === NetWork.Testnet) {\n        url = 'https://test.whatsonchain.com/tx/'\n    }\n    if (!url) {\n        return url\n    }\n    url += txid\n    return url\n}\n\nexport async function signAnyTx(options: any) {\n    const {txHex, scriptHex, inputIndex, privateKey, publicKey, satoshis} = options\n    const tx = new bsv.Transaction(txHex)\n    const script = bsv.Script.fromBuffer(Buffer.from(scriptHex, 'hex'))\n    const sig = toHex(signTx(tx, privateKey , script.toASM(), Number(satoshis), inputIndex))\n    \n    return {\n        publicKey: publicKey.toString(),\n        sig,\n    }\n}\n\n// todo 分页获取\nexport async function getAddressSensibleFtList(network: NetWork, address: string): Promise<SensibleFt[]> {\n    // todo remove next line\n    let res: SensibleFt[] = []\n    const pageSize = 20\n    try {\n        for (let page = 1; ; page++) {\n            const list = await getAddressSensibleFtListByPage(network, address, page, pageSize)\n            res = [...res, ...list]\n            if (list.length < pageSize) {\n                break\n            }\n        }\n    } catch (err) {\n        console.log('getAddressSensibleFtList error')\n        console.error(err)\n    }\n    return res;\n}\n\nexport async function getAddressSensibleFtListByPage(network: NetWork, address: string, page: number, pageSize: number = 20): Promise<SensibleFt[]> {\n    const apiPrefix = getSensibleApiPrefix(network)\n\n    const {data} = await axios.get(`${apiPrefix}/ft/summary/${address}?cursor=${(page - 1) * pageSize}&size=${pageSize}`)\n    const success = isSensibleSuccess(data)\n\n    if (success) {\n        return (data.data || []).map((item: any) => {\n            return {\n                genesis: item.genesis,\n                codehash: item.codehash,\n                tokenName: item.name,\n                tokenSymbol: item.symbol,\n                tokenDecimal: item.decimal,\n                balance: util.plus(item.balance, item.pendingBalance),\n            }\n        })\n    }\n    throw new Error(data.msg)\n}\n\n// 获取 bsv utxo\nexport async function getAddressBsvUtxoList(network: NetWork, address: string, page: number, pageSize: number=16): Promise<BsvUtxo[]> {\n    const cursor = (page - 1) * pageSize\n    const apiPrefix = getSensibleApiPrefix(network)\n    const {data} = await axios.get(`${apiPrefix}/address/${address}/utxo?cursor=${cursor}&size=${pageSize}`)\n    const success = isSensibleSuccess(data)\n    if (success) {\n        return (data.data || []).map((item: any) => {\n            return {\n                txId: item.txid, \n                outputIndex: item.vout,\n                satoshis: item.satoshi,\n                address: address,\n            }\n        })\n    }\n\n    // const fakeUtxoList: BsvUtxo[] = [\n    //     {\n    //         txId: '6a18f5b859fb4c281affaf8f6245a2fe0813867d4b7d24948da18e099462619b',\n    //         outputIndex: 0,\n    //         satoshis: 98775,\n    //         address,\n    //     },\n    //     {\n    //         txId: 'de980facfe7b10a84bfa658130b2b7725565510f967534459d63e6c9717a08e2',\n    //         outputIndex: 0,\n    //         satoshis: 98679,\n    //         address,\n    //     },\n    //     {\n    //         txId: '8ace8ab3995de63af867d929561b3a48bb499ea8d6e64c2ecefba29c6213764f',\n    //         outputIndex: 4,\n    //         satoshis: 4939535,\n    //         address,\n    //     },\n    //     {\n    //         txId: '74bec534becb77f894bcacaf2386604642a1ea00e371838b1780f5235a12bb9d',\n    //         outputIndex: 2,\n    //         satoshis: 45033315,\n    //         address,\n    //     }\n    // ]\n    // if (page === 1) {\n    //     return fakeUtxoList\n    // }\n    // return []\n    \n    throw new Error(data.msg)\n}\n\n// 获取bsv 余额, 这里加入了ft utxo的值，暂时不能用\nexport async function getAddressBsvBalance(network: NetWork, address: string): Promise<number | string> {\n    const apiPrefix = getSensibleApiPrefix(network)\n    const {data} = await axios.get(`${apiPrefix}/address/${address}/balance`)\n    const success = isSensibleSuccess(data)\n    if (success) {\n        return util.plus(data.data.satoshi, data.data.pendingSatoshi)\n    }\n    throw new Error(data.msg)\n}\n\nexport async function getAddressBsvBalanceByUtxo(network: NetWork, address: string): Promise<string> {\n    let page = 1\n    const pageSize = 16\n    let sum: string = '0'\n    for (;;) {\n        const utxoList = await getAddressBsvUtxoList(network, address, page, pageSize)\n        const total = utxoList.reduce((prev: any, cur: any) => util.plus(prev, cur.satoshis), '0')\n        sum = util.plus(sum, total)\n        if (utxoList.length < pageSize) {\n            break\n        }\n        page++\n    }\n    console.log('balance', sum)\n    return sum\n}\n\n// 获取 sensible ft 余额\nexport async function getAddressSensibleFtBalance(network: NetWork, address: string, codehash: string, genesis: string): Promise<number> {\n    const apiPrefix = getSensibleApiPrefix(network)\n    const {data} = await axios.get(`${apiPrefix}/ft/balance/${codehash}/${genesis}/${address}`)\n    const success = isSensibleSuccess(data)\n    if (success) {\n        return data.data.satoshi\n    }\n    throw new Error(data.msg)\n}\n\n// 获取 sensible 余额 地址\nexport async function getSensibleAddressUrl(network: NetWork, address: string, codehash: string, genesis: string) {\n    const test = network === NetWork.Mainnet ? '' : '/test'\n    // https://sensiblequery.com/#/ft/utxo/ac939f3cf7aba022d09f05e5448f1e635c81dbb3/598d220eaecb68cf783cbc6cc6295d042897874f/1FJCX1QG7KyaHpx1U2iVe4xoAWNVB1Wd3L\n    return `https://sensiblequery.com${test}/#/ft/utxo/${codehash}/${genesis}/${address}`\n}\n\n\n// 广播交易\nexport async function broadcastSensibleQeury(network: NetWork, rawtx: string) {\n    const apiPrefx = getSensibleApiPrefix(network)\n    console.log('sensible 交易广播', network, rawtx)\n    const {data} = await axios.post(`${apiPrefx}/pushtx`, {\n        txHex: rawtx,\n    })\n    const success = isSensibleSuccess(data)\n    if (success) {\n        return new bsv.Transaction(rawtx).hash\n    }\n    throw new Error(data.msg)\n}\n\n\n// 发送 token 交易\nconst mapBsvFeeError = (err: Error) => {\n    if (err.message === \"Insufficient balance.\") {\n        // 将模糊的错误信息转换\n        return new Error('Low bsv balance to pay miners')\n    }\n    return err\n}\nconst getCustomSigners = (codehash: string, genesis: string):SensibleSatotx[] => {\n    const findValue = customSatotxList.find(item => item.codehash === codehash && item.genesis === genesis)\n    if (findValue) {\n        return findValue.satotxList\n    }\n    return []\n}\nconst selectNotNullSigners = (...signerList: SensibleSatotx[][]): SensibleSatotx[] =>  {\n    for (let signers of signerList) {\n        if (signers && signers.length > 0) {\n            return signers\n        }\n    }\n    return []\n}\nexport async function transferSensibleFt(network: NetWork, signers: SensibleSatotx[], senderWif: string, receivers: TransferReceiver[], codehash: string, genesis: string, utxos: any = false, noBroadcast: boolean = false){\n    \n    const customSigner = getCustomSigners(codehash, genesis)\n    signers = selectNotNullSigners(signers, customSigner)\n\n    console.log('signers', signers)\n    \n    const selectRes = signers && signers.length > 0 ? await SensibleFT.selectSigners(signers) : await SensibleFT.selectSigners();\n    // const selectRes = await SensibleFT.selectSigners();\n\n    const ft = new SensibleFT({\n        network: network as any,\n        purse: senderWif,\n        feeb: 0.5,\n        signerSelecteds: selectRes.signerSelecteds,\n        signers: selectRes.signers,\n    })\n    console.log('transferSensibleFt', receivers, network, codehash, genesis, signers)\n\n    try {\n        const {txid, tx, routeCheckTx} = await ft.transfer({\n            senderWif: senderWif,\n            receivers,\n            codehash,\n            genesis,\n            utxos: utxos,\n            noBroadcast,\n        })\n        if (noBroadcast === true) {\n            return {tx, routeCheckTx}\n        }\n        util.checkFeeRate(tx)\n        const txParseRes = parseTransaction(network, tx.serialize(true))\n        return {\n            txid,\n            outputs: txParseRes.outputs,\n        }\n    } catch (_err) {\n        const err = mapBsvFeeError(_err)\n        const errMsg = err.toString();\n        const isBsvAmountExceed =\n          errMsg.indexOf(\n            \"The count of utxos should not be more than 3 in transfer\"\n          ) > 0;\n        let isFtUtxoAmountExceed = errMsg.indexOf('Too many token-utxos') > 0;\n        console.log(\"broadcast sensible ft error\");\n        console.error(err);\n\n        if (!isBsvAmountExceed && !isFtUtxoAmountExceed) {\n            throw err;\n        }\n\n        // 如果 bsv utxo 先 merge bsv utxo\n        if (isBsvAmountExceed) {\n            try {\n                await mergeBsvUtxo(network, senderWif)\n                await sleep(3000)\n            } catch (err) {\n                console.log('merge bsv utxo fail')\n                console.error(err)\n                throw err\n            }\n\n            // merge 后重新发起 ft transfer 交易\n            try {\n                const {txid, tx} = await ft.transfer({\n                    senderWif: senderWif,\n                    receivers,\n                    codehash,\n                    genesis,\n                })\n                util.checkFeeRate(tx)\n                const txParseRes = parseTransaction(network, tx.serialize(true))\n                return {\n                    txid,\n                    outputs: txParseRes.outputs,\n                }\n            } catch (_err) {\n                const err = mapBsvFeeError(_err)\n                console.log('ft transfer fail after bsv utxo merge')\n                console.error(err)\n                const errMsg = err.toString()\n                isFtUtxoAmountExceed = errMsg.indexOf('Too many token-utxos') > 0;\n                if (!isFtUtxoAmountExceed) {\n                    throw err\n                }\n            }\n        }\n\n        if (isFtUtxoAmountExceed) {\n            // merge utxo\n            try {\n                const {tx} = await ft.merge({\n                    ownerWif: senderWif,\n                    codehash,\n                    genesis,\n                })\n                util.checkFeeRate(tx)\n                await sleep(3000)\n            } catch (err) {\n                console.log('merge ft utxo fail')\n                console.error(err)\n                throw err\n            }\n\n            // merge 后重新发起 ft transfer 交易\n            try {\n                const {txid, tx} = await ft.transfer({\n                    senderWif: senderWif,\n                    receivers,\n                    codehash,\n                    genesis,\n                })\n                util.checkFeeRate(tx)\n                const txParseRes = parseTransaction(network, tx.serialize(true))\n                return {\n                    txid,\n                    outputs: txParseRes.outputs,\n                }\n            } catch (_err) {\n                const err = mapBsvFeeError(_err)\n                console.log('ft transfer fail after ft utxo merge')\n                console.error(err)\n                throw err\n            }\n        }\n    } \n}\n\nconst Signature = bsv.crypto.Signature;\nexport const sighashType = Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID;\n\n\n// p2pkh 解锁\nexport function unlockP2PKHInput(privateKey: bsv.PrivateKey, tx: bsv.Transaction, inputIndex: number, sigtype: number) {\n    const sig = new bsv.Transaction.Signature({\n      publicKey: privateKey.publicKey,\n      prevTxId: tx.inputs[inputIndex].prevTxId,\n      outputIndex: tx.inputs[inputIndex].outputIndex,\n      inputIndex,\n      signature: bsv.Transaction.Sighash.sign(\n        tx,\n        privateKey,\n        sigtype,\n        inputIndex,\n        tx.inputs[inputIndex].output.script,\n        tx.inputs[inputIndex].output.satoshisBN\n      ),\n      sigtype,\n    });\n  \n    tx.inputs[inputIndex].setScript(\n      bsv.Script.buildPublicKeyHashIn(\n        sig.publicKey,\n        sig.signature.toDER(),\n        sig.sigtype\n      )\n    );\n}\n\n// 发送 bsv 交易\nfunction checkBsvReceiversSatisfied(receivers: TransferReceiver[], tx: any, network: NetWork) {\n    let satified = true\n    const txAddressAmountMap: {[key: string]: number} = {}\n    const getKey = (address: string, amount: any) => {\n        return `${address}_${util.toString(amount)}`\n    }\n    tx.outputs.forEach((output: any) => {\n        const address = output.script.toAddress(network);\n        const amount = output.satoshis\n        const key = getKey(address, amount)\n        txAddressAmountMap[key] = (txAddressAmountMap[key] || 0) + 1\n    })\n    for (let i = 0; i < receivers.length; i++) {\n        const rece = receivers[i]\n        const key = getKey(rece.address, rece.amount)\n        if (!txAddressAmountMap[key]) {\n            satified = false\n            break\n        }\n        txAddressAmountMap[key] = txAddressAmountMap[key] - 1\n    }\n    return satified\n}\nexport async function transferBsv(network: NetWork, senderWif: string, receivers: TransferReceiver[], noBroadcast: boolean=false, allUtxos: boolean=false) {\n    // 1. 获取用户 utxo 列表\n    // 2. 判断 utxo 金额 是否 满足 receivers 金额\n    // 3. 构造交易\n    // 4. 广播交易\n    console.log('arguments', network, senderWif, receivers)\n    const address = new bsv.PrivateKey(senderWif, network).toAddress(network)\n    const balance = await getAddressBsvBalanceByUtxo(network, address)\n    const totalOutput = receivers.reduce((prev: any, cur) => util.plus(prev, cur.amount), '0')\n    if (util.lessThan(balance, totalOutput)) {\n        throw new Error('Insufficient_bsv_Balance')\n    }\n    let utxoValue: string = '0'\n    let selectedUtxoList = []\n\n    const tx = new bsv.Transaction()\n    tx.feePerKb(500)\n    const dust = 456\n\n    // input = output + fee + change\n    // 异常情况: 加上 change 后, fee 增加, 原本 input 不够了, 此时将所有输出移除, 然后，暂不考虑\n    \n    const pageSize = 16\n    for (let page = 1; ;page++) {\n        const utxoResList = await getAddressBsvUtxoList(network, address, page, pageSize)\n        for (let i = 0; i < utxoResList.length; i++) {\n            const item = utxoResList[i]\n            utxoValue = util.plus(utxoValue, item.satoshis)\n            selectedUtxoList.push(item)\n            tx.addInput(\n                new bsv.Transaction.Input.PublicKeyHash({\n                    output: new bsv.Transaction.Output({\n                        script: bsv.Script.buildPublicKeyHashOut(item.address),\n                        satoshis: item.satoshis,\n                    }),\n                    prevTxId: item.txId,\n                    outputIndex: item.outputIndex,\n                    script: bsv.Script.empty(),\n                })\n            );\n            if (!allUtxos && util.lessThanEqual(util.plus(totalOutput, dust), utxoValue)) {\n                break\n            }\n        }\n        if (!allUtxos && util.lessThanEqual(util.plus(totalOutput, dust), utxoValue)) {\n            break\n        }\n        if (utxoResList.length <= pageSize) {\n            break\n        }\n    }\n    receivers.forEach(item => {\n        tx.to(item.address, +item.amount)\n    })\n    if (util.greaterThan(util.minus(utxoValue, +totalOutput), 0)) {\n        tx.change(address)\n    }\n    // 如果 (utxo输入 - fee - 所有输出) = 找零 < dust，那么全部转出\n    if (util.lessThan(util.minus(utxoValue, tx.getFee(), totalOutput), dust)) {\n        // 全部转出\n        tx.clearOutputs()\n        receivers.forEach((item, index) => {\n            \n            if (receivers.length === index + 1) {\n                // 最后一个使用 change\n                tx.change(item.address)\n            } else {\n                tx.to(item.address, +item.amount)\n            }\n        })\n    }\n    tx.inputs.forEach((_: any, inputIndex: number) => {\n        const privateKey = new bsv.PrivateKey(senderWif)\n        unlockP2PKHInput(privateKey, tx, inputIndex, sighashType);\n    });\n    util.checkFeeRate(tx)\n    if (noBroadcast === true) {\n        return tx\n    }\n    const txid = await broadcastSensibleQeury(network, tx.serialize())\n    const txParseRes = parseTransaction(network, tx.serialize(true))\n\n    const amountSatified = checkBsvReceiversSatisfied(receivers, tx, network)\n    if (!amountSatified) {\n        console.log(util.safeJsonStringify({\n            type: 'bsvTransferAmountNotSatified',\n            txid: tx.hash,\n            receivers,\n            outputs: txParseRes.outputs,\n        }))\n        Sentry.captureMessage(`bsvTransferAmountNotSatified_${address}_${tx.hash}`);\n    }\n    return {\n        txid,\n        outputs: txParseRes.outputs,\n        fee: tx.getFee()\n    }\n}\n\n// 合并 bsv utxo, 合并一页\nexport async function mergeBsvUtxo(network: NetWork, senderWif: string) {\n    const address = new bsv.PrivateKey(senderWif, network).toAddress(network)\n    const utxolist = await getAddressBsvUtxoList(network, address, 1)\n    const tx = new bsv.Transaction()\n    tx.feePerKb(500)\n    utxolist.forEach(item => {\n        tx.addInput(new bsv.Transaction.Input.PublicKeyHash({\n            output: new bsv.Transaction.Output({\n                script: bsv.Script.buildPublicKeyHashOut(item.address),\n                satoshis: item.satoshis,\n            }),\n            prevTxId: item.txId,\n            outputIndex: item.outputIndex,\n            script: bsv.Script.empty(),\n        }))\n    })\n    tx.change(address)\n    tx.inputs.forEach((_: any, inputIndex: number) => {\n        const privateKey = new bsv.PrivateKey(senderWif)\n        unlockP2PKHInput(privateKey, tx, inputIndex, sighashType)\n    })\n    util.checkFeeRate(tx)\n    const txid = await broadcastSensibleQeury(network, tx.serialize())\n    const txParseRes = parseTransaction(network, tx.serialize(true))\n    return {\n        txid,\n        outputs: txParseRes.outputs,\n    }\n}\n\n\nconst parseTokenContractScript = function (scriptBuf: any, network: any = \"mainnet\") {\n    \n    const parsed = SensibleFT.parseTokenScript(scriptBuf, network)\n    \n    return parsed\n};\n\n\n\nexport function parseTransaction(network: NetWork, rawtx: string) {\n    let tx\n    try {\n        tx = new bsv.Transaction(rawtx)\n    } catch (err) {\n        return {\n            error: err.message\n        }\n    }\n\n    const inputs = tx.inputs.map((input: any, index: number) => {\n        const ftToken: any = parseTokenContractScript(input.script.toBuffer(), network);\n\n        let ret: any = {\n            index: index,\n            prevTxId: input.prevTxId.toString('hex'),\n            outputIndex: input.outputIndex,\n            script: input.script.toString('hex'),\n        }\n        try {\n            const addr = input.script.toAddress(network);\n            if (addr) {\n                ret.address = addr.toString()\n            }\n        } catch (err) {}\n        if (!ftToken) {\n            return ret\n        }\n        if (ftToken.tokenAmount <= 0) {\n            return ret\n        }\n        ret = {\n            ...ret,\n            isFt: true,\n            ftDetail: {\n                genesis: ftToken.genesis,\n                codehash: ftToken.codehash,\n                address: ftToken.tokenAddress,\n                decimal: ftToken.decimalNum,\n                name: ftToken.tokenName,\n                symbol: ftToken.tokenSymbol,\n            }\n        }\n        return ret\n    })\n    const outputs = tx.outputs.map((output: any, index: number) => {\n        const ftToken: any = parseTokenContractScript(output.script.toBuffer(), network);\n        let ret: any = {\n            index: index,\n            satoshis: output.satoshis,\n            script: output.script.toString('hex')\n        }\n        try {\n            const addr = output.script.toAddress(network);\n            if (addr) {\n                ret.address = addr.toString()\n            }\n        } catch (err) {}\n        if (!ftToken) {\n            return ret\n        }\n        if (ftToken.tokenAmount <= 0) {\n            return ret\n        }\n        ret = {\n            ...ret,\n            isFt: true,\n            ftDetail: {\n                genesis: ftToken.genesis,\n                codehash: ftToken.codehash,\n                address: ftToken.tokenAddress,\n                decimal: ftToken.decimalNum,\n                name: ftToken.tokenName,\n                symbol: ftToken.tokenSymbol,\n                amount: ftToken.tokenAmount,\n            }\n        }\n        return ret\n    })\n\n    return {\n        inputs: inputs,\n        outputs: outputs,\n        txid: tx.hash,\n    }\n    \n}\n\n\n(window as any).transferBsv = transferBsv;\n(window as any).signAnyTx = signAnyTx;","import { createGlobalState } from \"react-hooks-global-state\";\nimport {State, SensibleSatotx} from './stateType'\n\nconst defaultSatotx: SensibleSatotx = {\n    satotxApiPrefix: 'https://api.satotx.com', \n    satotxPubKey: '25108ec89eb96b99314619eb5b124f11f00307a833cda48f5ab1865a04d4cfa567095ea4dd47cdf5c7568cd8efa77805197a67943fe965b0a558216011c374aa06a7527b20b0ce9471e399fa752e8c8b72a12527768a9fc7092f1a7057c1a1514b59df4d154df0d5994ff3b386a04d819474efbd99fb10681db58b1bd857f6d5'\n}\n\n// app state\nconst initialState: State = {\n    account: null,\n    key: null,\n    bsvBalance: null,\n    sensibleFtList: [],\n    satotxConfigMap: new Map()\n};\ninitialState.satotxConfigMap.set(\n    '5b3bfa8e7600d701e70551075573ea28fd16c25a39fe2bdafdc3e08b11ca76b800000000', \n    [defaultSatotx, defaultSatotx, defaultSatotx]\n)\nconst { useGlobalState, getGlobalState, setGlobalState } = createGlobalState(initialState);\n\nexport {\n    useGlobalState,\n    getGlobalState,\n    setGlobalState,\n    defaultSatotx,\n}\n","import {setGlobalState, getGlobalState } from './state'\nimport {generateKeysFromEmailPassword, getAddressSensibleFtList, getAddressBsvBalanceByUtxo, signAnyTx} from '../lib'\nimport {Account, BalanceBsv, Key, SensibleFt} from './stateType'\nimport * as createPostMsg from 'post-msg';\nimport { SensibleFT } from 'sensible-sdk';\nimport { signTx, bsv, toHex } from 'scryptlib';\n\n// local account storage\nconst accountStorageKey = 'accountStorageKey'\n// localStorage.removeItem(accountStorageKey)\nfunction saveAccountStorage(account: Account | null) {\n    const str = account ? JSON.stringify(account) : ''\n    localStorage.setItem(accountStorageKey, str)\n    // do not save account !!!\n}\nfunction getAccountStorage(): Account | null {\n    const str = localStorage.getItem(accountStorageKey)\n    if (!str) {\n        return null\n    }\n    return JSON.parse(str)\n}\n\nfunction isSupportToken(codehash: string) {\n    return SensibleFT.isSupportedToken(codehash)\n}\n\n// app action\nlet pollingBsvTimer = 0\nlet pollingSensibleFtTimer = 0\nexport async function pollingBsvBalance(){\n    clearInterval(pollingBsvTimer)\n    const fn = async () => {\n        const account = getGlobalState('account')\n        const key = getGlobalState('key')\n        if (!account || !key) {\n            return\n        }\n        try {\n            const balance = await getAddressBsvBalanceByUtxo(account.network, key.address)\n            setGlobalState('bsvBalance', {balance})\n        } catch (err) {\n            console.log('getAddressBsvBalance err', account.network, key.address, err)\n        }\n    }\n    await fn()\n    pollingBsvTimer = window.setInterval(fn, 5000)\n}\nexport async function pollingSensibleFtBalance() {\n    clearInterval(pollingSensibleFtTimer)\n    const fn = async () => {\n        const account = getGlobalState('account')\n        const key = getGlobalState('key')\n        if (!account || !key) {\n            return\n        }\n        try {\n            const sensibleFtList = await getAddressSensibleFtList(account.network, key.address)\n            const valid_sensibleFtList = sensibleFtList.filter(item => isSupportToken(item.codehash));\n            setGlobalState('sensibleFtList', valid_sensibleFtList);\n        } catch (err) {\n            console.log('getAddressSensibleFtList err', account.network, key.address, err)\n        }\n    }\n    await fn()\n    pollingSensibleFtTimer = window.setInterval(fn, 5000)\n}\n\nexport async function saveAccount(account: Account | null) {\n    saveAccountStorage(account)\n    if (account) {\n        const key = generateKeysFromEmailPassword(account.email, account.password, account.network)\n        setGlobalState('account', account)\n        setGlobalState('key', key)\n        await pollingSensibleFtBalance()\n        pollingBsvBalance()\n    } else {\n        setGlobalState(\"account\", null)\n        setGlobalState('key', null)\n    }\n}\n\nexport function recoverAccountFromStorage() {\n    const account = getAccountStorage()\n    saveAccount(account)\n}\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n\n// iframe action\nexport async function runIframeTask() {\n    if (window === window.top) {\n        return\n    }\n    const hashdata = JSON.parse(decodeURIComponent(window.location.hash.substr(1)))\n    const postMsg = createPostMsg(window.top, '*')\n    const id = hashdata.id\n\n    let preAccount: Account | null = null\n    let preBsvBalance: BalanceBsv | null = null\n    let preSensibleFtBalance: SensibleFt[] = []\n    let accountKey: Key | null = null\n    // let lastBsvBalance: \n\n    postMsg.emit(id, {\n        type: 'ready'\n    })\n\n    const isBsvBalanceEqual = (b1: BalanceBsv | null, b2: BalanceBsv | null) => {\n        if (!b1 && !b2) {\n            return true\n        }\n        return b1?.balance === b2?.balance\n    }\n    const isSensibleFtBalanceEqual = (b1: SensibleFt[], b2: SensibleFt[]) => {\n        if (b1.length !== b2.length) {\n            return false\n        }\n        b1.sort((item1, item2) => item1.genesis.localeCompare(item2.genesis))\n        b2.sort((item1, item2) => item1.genesis.localeCompare(item2.genesis))\n\n        for (let i = 0; i < b1.length; i++) {\n            const item1 = b1[i]\n            const item2 = b2[i]\n            if (item1.genesis !== item2.genesis) {\n                return false\n            }\n            if (item1.balance !== item2.balance) {\n                return false\n            }\n        }                \n        return true\n    }\n    const isAccountEqual = (b1: Account | null, b2: Account | null) => {\n        return (\n            b1?.email === b2?.email &&\n            b1?.network === b2?.network &&\n            b1?.password === b2?.password\n        )\n    }\n    const requestLatestData = async () => {\n        const latestAccount = getAccountStorage()\n        if (!(isAccountEqual(latestAccount, preAccount))) {\n            postMsg.emit(id, {\n                type: 'account',\n                data: latestAccount\n            })\n        }\n        preAccount = latestAccount;\n        if (preAccount) {\n            // get balance\n            accountKey = generateKeysFromEmailPassword(preAccount.email, preAccount.password, preAccount.network)\n            try {\n                const latestBalance = await getAddressBsvBalanceByUtxo(preAccount.network, accountKey.address)\n                const equal = isBsvBalanceEqual(preBsvBalance, {balance: latestBalance})\n                preBsvBalance = {balance: latestBalance}\n                if (!equal) {\n                    postMsg.emit(id, {\n                        type: 'bsvBalance', \n                        data: preBsvBalance,\n                    })\n                }\n            } catch (err) {}\n            try {\n                const latestBalance = await getAddressSensibleFtList(preAccount.network, accountKey.address)\n                const equal = isSensibleFtBalanceEqual(preSensibleFtBalance, latestBalance)\n                preSensibleFtBalance = latestBalance\n                if (!equal) {\n                    postMsg.emit(id, {\n                        type: 'sensibleFtBalance',\n                        data: preSensibleFtBalance\n                    })\n                }\n            } catch (err) {}\n            return true\n        } else {\n            return false\n        }\n    }\n\n    const handleRequest = (method: string, fn: Function) => {\n        postMsg.on(id, async function (_: any, eventData: any) {\n            const {type, data} = eventData\n            if (type === 'request' && data?.method === method) {\n                const requestId = data.requestId\n                try {\n                    const res = await fn(data.params)\n                    postMsg.emit(id, {\n                        type: 'response',\n                        data: {\n                            requestId,\n                            method,\n                            response: res,\n                        }\n                    })\n                } catch (err) {\n                    postMsg.emit(id, {\n                        type: 'response',\n                        data: {\n                            requestId,\n                            method,\n                            error: err.toString()\n                        }\n                    })\n                }\n            }\n        })\n    }\n\n    handleRequest('getAccount', async () => {\n        await requestLatestData()\n        if (!preAccount) {\n            return null\n        }\n        return {\n            name: preAccount.email,\n            email: preAccount.email,\n            network: preAccount.network,\n        }\n    });\n    handleRequest('getBsvBalance', async () => {\n        await requestLatestData()\n        return preBsvBalance\n    })\n    handleRequest('getSensibleFtBalance', async () => {\n        await requestLatestData()\n        return preSensibleFtBalance\n    })\n    handleRequest('getAddress', async () => {\n        await requestLatestData()\n        if (!accountKey) {\n            return null\n        }\n        return accountKey.address\n    })\n    handleRequest('signTx', async (options: any) => {\n        // 参数 (address + sighash)\n        // sighash: tx, sigtype, inputIndex, input.output.script, input.output,satoshisBN\n\n        // scryptlib: signTx(tx, privateKey, lockingScriptASM: string, inputAmount: number, inputIndex: number, sighashType = DEFAULT_SIGHASH_TYPE, flags=DEFAULT_FLAGS): Signature.toTxFormat()\n\n        // bsv: bsv.Transaction.sighash.sign(tx: Transaction, privateKey: PrivateKey, sighashType: number, inputIndex: string, subscript: Script, satoshisBN: BN): Signature\n\n        // sCrypt params: tx(Transaciton object), inputIndex(number), sigHashType(SigType), onlySig?(boolean) 成功返回 unlockingScript 或者 Signature string\n\n        // options: {txHex, scriptHex, inputIndex, privateKey, publicKey, address, satoshis}\n\n        const {address} = options\n        if (!accountKey) {\n            throw new Error('not_login')\n        }\n        if (address !== accountKey.address) {\n            throw new Error('not_my_address')\n        }\n        return signAnyTx({\n            ...options,\n            privateKey: new bsv.PrivateKey(accountKey.privateKey, preAccount?.network ),\n            publicKey: new bsv.PublicKey(accountKey.publicKey, preAccount?.network)\n        })\n    })\n    handleRequest('logout', async () => {\n        saveAccountStorage(null)\n    })\n    handleRequest('ping', () => {\n        return null;\n    })\n\n    for (;;) {\n        const signed = await requestLatestData()\n        await sleep(signed ? 3000 : 500)\n    }\n\n}","import { useRef, useEffect } from \"react\";\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport function useOnceCall(cb, condition = true) {\n  const isCalledRef = useRef(false);\n  useEffect(() => {\n    if (condition && !isCalledRef.current) {\n      isCalledRef.current = true;\n      cb();\n    }\n  }, [cb, condition]);\n}\n","import {\n  Button,\n  Popover,\n  Card,\n  Form,\n  Input,\n  Select,\n  List,\n  Row,\n  Col,\n  message,\n  InputNumber,\n  Space,\n  Modal,\n} from \"antd\";\nimport {\n  UserOutlined,\n  LockOutlined,\n  MinusOutlined,\n  PlusOutlined,\n  LeftOutlined,\n} from \"@ant-design/icons\";\nimport { useState, useEffect } from \"react\";\nimport * as QRCode from \"qrcode.react\";\nimport { bsv } from 'scryptlib';\nimport {\n  getWocAddressUrl,\n  formatValue,\n  isValidAddress,\n  transferBsv,\n  transferSensibleFt,\n  getWocTransactionUrl,\n  getSensibleFtHistoryUrl,\n  parseTransaction,\n  broadcastSensibleQeury,\n} from \"./lib\";\nimport * as createPostMsg from \"post-msg\";\nimport { useGlobalState } from \"./state/state\";\nimport * as actions from \"./state/action\";\nimport { useOnceCall } from \"./hooks\";\nimport \"./App.css\";\nimport * as util from \"./lib/util\";\nimport * as Sentry from \"@sentry/react\";\nimport axios from 'axios';\n\n//const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst { Option } = Select;\n\nfunction Header() {\n  const [account] = useGlobalState(\"account\");\n  const [key] = useGlobalState(\"key\");\n  const [decodeModalVisible, setDecodeModalVisible] = useState(false);\n  const [rawtx, setRawtx] = useState(\"\");\n  const [network, setNetwork] = useState(\"\");\n  const [resultModalVisible, setResultModalVisible] = useState(false);\n\n  const handleLogout = () => {\n    actions.saveAccount(null);\n  };\n  const handleHistory = () => {\n    let url = getWocAddressUrl(account.network, key.address);\n    window.open(url);\n  };\n  const handleSourceCode = () => {\n    window.open(\"http://github.com\");\n  };\n\n  const decodeTx = () => {\n    const res = parseTransaction(network, rawtx);\n    console.log(\"decodeTx res\", res);\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"logo\">Web Wallet</div>\n      {account && (\n        <Popover\n          title=\"\"\n          content={\n            <>\n              <Button type=\"link\" onClick={handleLogout}>\n                Logout\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={handleHistory}>\n                History\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={handleSourceCode}>\n                Source Code\n              </Button>\n              <br />\n              <Button type=\"link\" onClick={() => setDecodeModalVisible(true)}>\n                decode rawtx\n              </Button>\n            </>\n          }\n        >\n          <Button type=\"link\">{account.email}</Button>\n        </Popover>\n      )}\n      <Modal\n        visible={decodeModalVisible}\n        onCancel={() => setDecodeModalVisible(false)}\n      >\n        <Input.TextArea\n          rows={4}\n          value={rawtx}\n          onChange={(e) => setRawtx(e.target.value)}\n        ></Input.TextArea>\n        <Select\n          style={{ width: 180 }}\n          placeholder=\"Select network\"\n          value={network}\n          onChange={(value) => setNetwork(value)}\n        >\n          <Option value=\"mainnet\">mainnet</Option>\n          <Option value=\"testnet\">testnet</Option>\n        </Select>\n        <Button type=\"primary\" onClick={decodeTx}>\n          decode\n        </Button>\n      </Modal>\n      <Modal\n        visible={resultModalVisible}\n        onCancel={() => setResultModalVisible(false)}\n      ></Modal>\n    </div>\n  );\n}\n\nfunction LoginPanel() {\n  const [account] = useGlobalState(\"account\");\n  const [form] = Form.useForm();\n\n  const handleOnFinish = () => {\n    Modal.confirm({\n      title: \"安全注意\",\n      content: (\n        <div>\n          Web钱包的私钥是通过用户的邮箱和密码实时计算得到，不会上传服务器，也不会保存在本地(代码见\n          <a\n            href=\"https://github.com/klouskingsley/bsv-web-wallet\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            github\n          </a>\n          )。仅供方便用户测试之用，不适合存放大量资金，建议用户妥善保管邮箱+密码组合以防资金丢失，或在使用完成之后将剩余资金转移。邮箱+密码组合丢失(忘记，被盗等情形)会导致资产丢失\n        </div>\n      ),\n      onOk: () => {\n        const account = form.getFieldsValue();\n        actions.saveAccount(account);\n      },\n    });\n  };\n  if (account) {\n    return null;\n  }\n\n  return (\n    <Card className=\"card\" title=\"Login\" bordered={false}>\n      <Form form={form} layout=\"vertical\" onFinish={handleOnFinish}>\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              type: \"email\",\n              required: true,\n              message: \"Please input a valid Email!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Email\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            { required: true, message: \"Please input your Password!\" },\n            {\n              min: 6,\n              message: \"Password at least 6 chars\",\n              transform: (value) => value && value.trim(),\n            },\n          ]}\n        >\n          <Input.Password\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            visibilityToggle={true}\n            placeholder=\"Password\"\n          />\n        </Form.Item>\n        <Form.Item name=\"network\" label=\"Network\" rules={[{ required: true }]}>\n          <Select placeholder=\"Select network\">\n            <Option value=\"mainnet\">mainnet</Option>\n            <Option value=\"testnet\">testnet</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          说明：Web钱包的私钥是通过用户的邮箱和密码实时计算得到(无需注册)，每次输入相同的邮箱和密码登录即可计算出相同的私钥，私钥不会上传服务器，也不会保存在本地，仅供方便用户测试之用，不适合存放大量资金，建议用户妥善保管邮箱+密码组合以防资金丢失。\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction AccountInfoPanel({ onWithDraw, onTransfer }) {\n  const [key] = useGlobalState(\"key\");\n  const [account] = useGlobalState(\"account\");\n  const [bsvBalance] = useGlobalState(\"bsvBalance\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n\n  if (!key || !account) {\n    return null;\n  }\n  const handleHistory = () => {\n    let url = getWocAddressUrl(account.network, key.address);\n    window.open(url);\n  };\n  const handleTransfer = (genesis) => {\n    if (!genesis) {\n      return onTransfer(\"\");\n    }\n    // if (!satotxConfigMap.has(genesis)) {\n    //   return message.error(\"rabin api not set or found\");\n    // }\n    return onTransfer(genesis);\n  };\n  return [\n    <Card\n      className=\"card\"\n      title=\"Account Info\"\n      bordered={false}\n      actions={\n        <>\n          <Button type=\"link\" onClick={handleHistory}>\n            history\n          </Button>\n          ,\n          <Button type=\"link\" onClick={onWithDraw}>\n            withdraw\n          </Button>\n          ,\n        </>\n      }\n    >\n      <Form layout=\"vertical\">\n        <Form.Item label={`${account.network} address`}>\n          <Input value={key.address} />\n          <div style={{ margin: 20 }}>\n            <QRCode value={key.address} />\n          </div>\n        </Form.Item>\n        <Form.Item label=\"privateKey\">\n          <Input.Password visibilityToggle={true} value={key.privateKey} />\n        </Form.Item>\n      </Form>\n    </Card>,\n    <Card className=\"card\" title=\"Asset\" bordered={false}>\n      <Form layout=\"vertical\">\n        {bsvBalance && (\n          <Form.Item label=\"BSV balance\">\n            <Row justify=\"space-between\">\n              <Col span={16}>\n                <div>{formatValue(bsvBalance.balance, 8)}</div>\n              </Col>\n              <Col span={7}>\n                <Button type=\"link\" onClick={() => handleTransfer(\"\")}>\n                  Transfer BSV\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n        )}\n        {sensibleFtList.length > 0 && (\n          <Form.Item label=\"Sensible Fungible Token\">\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={sensibleFtList}\n              renderItem={(item) => {\n                return (\n                  <List.Item\n                    key={item.genesis}\n                    actions={\n                      <>\n                        <Popover\n                          placement=\"topRight\"\n                          content={\n                            <>\n                              <div>codehash: {item.codehash}</div>,\n                              <div>genesis: {item.genesis}</div>,\n                            </>\n                          }\n                        >\n                          <a\n                            key=\"list-loadmore-more\"\n                            href={getSensibleFtHistoryUrl(\n                              account.network,\n                              key.address,\n                              item.genesis,\n                              item.codehash\n                            )}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                          >\n                            more info\n                          </a>\n                        </Popover>\n                      </>\n                    }\n                  >\n                    <List.Item.Meta\n                      title={item.tokenSymbol}\n                      description={item.tokenName}\n                    />\n                    <Row>\n                      <Col>\n                        <div\n                          style={{\n                            height: \"100%\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          Balance:{\" \"}\n                          {formatValue(item.balance, item.tokenDecimal)}\n                        </div>\n                      </Col>\n                      <Col>\n                        <Button\n                          type=\"link\"\n                          onClick={() => handleTransfer(item.genesis)}\n                        >\n                          Go Transfer\n                        </Button>\n                      </Col>\n                    </Row>\n                  </List.Item>\n                );\n              }}\n            ></List>\n          </Form.Item>\n        )}\n      </Form>\n    </Card>,\n  ];\n}\n\nfunction getRabinPubKeys(url) {\n  return axios.get(url);\n}\n\nasync function getRabins(rabinApis = []) {\n  let promises = [], rabins = [];\n  rabinApis.forEach(rabinApi => {\n    promises.push(getRabinPubKeys(rabinApi));\n  })\n  return new Promise(resolve => {\n    axios.all(promises).then(res => {\n      // console.log(res);\n      res.forEach((item, index) => {\n        rabins.push({\n          satotxApiPrefix: rabinApis[index],\n          satotxPubKey: item.data.data.pubKey\n        })\n      })\n\n      resolve(rabins);\n    })\n  })\n\n}\n\nfunction TransferAllPanel({ initDatas = [], onCancel, onTransferCallback }) {\n  const [key] = useGlobalState(\"key\");\n  const [bsvBalance] = useGlobalState(\"bsvBalance\");\n  const [account] = useGlobalState(\"account\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  useOnceCall(() => {\n    const values = {};\n    initDatas.forEach((data, index) => {\n      const isBsv = !data.genesis;\n      const token = sensibleFtList.find(\n        (item) => item.genesis === data.genesis\n      );\n      const decimal = isBsv ? 8 : token.tokenDecimal;\n      values[`receiverList${index}`] = data.receivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.div(item.amount, util.getDecimalString(decimal)),\n        };\n      });\n    });\n    form.setFieldsValue(values);\n  }, key && bsvBalance);\n\n  if (!key) {\n    return null;\n  }\n  if (!bsvBalance) {\n    return null;\n  }\n\n  const handleSubmit = async () => {\n    const receiverLists = form.getFieldsValue();\n\n    const broadcastBsv = async ({ formatReceiverList, noBroadcast }) => {\n      setLoading(true);\n      let transferRes;\n      let txid = \"\";\n      try {\n        if (noBroadcast === true) {\n          const allUtxos = true\n          const tx = await await transferBsv(\n            account.network,\n            key.privateKey,\n            formatReceiverList,\n            noBroadcast,\n            allUtxos\n          );\n          return tx\n        }\n        const res = await await transferBsv(\n          account.network,\n          key.privateKey,\n          formatReceiverList,\n        );\n        transferRes = res;\n        txid = res.txid;\n      } catch (err) {\n        const msg = \"broadcast error: \" + err.toString();\n        Sentry.captureException(err);\n        Sentry.captureMessage(`bsvTransferFail_${key.address}`);\n        onTransferCallback({\n          error: msg,\n        });\n        console.log(\"broadcast bsv error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      Sentry.captureMessage(`bsvTransferSuccess_${key.address}_${txid}`);\n      return transferRes;\n    };\n\n    const broadcastSensibleFt = async ({\n      formatReceiverList,\n      token,\n      decimal,\n      genesis,\n      rabinApis,\n      utxos,\n      noBroadcast\n    }) => {\n      setLoading(true);\n      let transferRes;\n      try {\n\n        const rabins = await getRabins(rabinApis);\n        const res = await transferSensibleFt(\n          account.network,\n          // signers,\n          rabins,\n          key.privateKey,\n          formatReceiverList,\n          token.codehash,\n          token.genesis,\n          utxos,\n          noBroadcast || false\n        );\n        transferRes = res;\n      } catch (err) {\n        Sentry.captureException(err);\n        Sentry.captureMessage(\n          `ftTransferFail_${key.address}_${token.genesis}_${token.genesis}`\n        );\n        onTransferCallback({\n          error: \"broadcast sensible ft error, \" + err.toString(),\n        });\n        console.log(\"broadcast sensible ft error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      return transferRes;\n    };\n\n    const broadcastBsvAndToken = async () => {\n      const txs = [];\n      const transferRes = [];\n      let utxos = [];\n      // bsv transaction must be the first one\n      for (let i = 0; i < initDatas.length; i++) {\n        const data = initDatas[i];\n        const isBsv = !data.genesis;\n        const token = sensibleFtList.find(\n          (item) => item.genesis === data.genesis\n        );\n        const decimal = isBsv ? 8 : token.tokenDecimal;\n        const balance = isBsv ? bsvBalance.balance : token.balance;\n        const rabinApis = data.rabinApis;\n        const totalOutputValueFloatDuck = receiverLists[\n          `receiverList${i}`\n        ].reduce((prev, cur) => util.plus(prev, cur.amount), 0);\n\n        const totalOutputValue = util.multi(\n          totalOutputValueFloatDuck,\n          util.getDecimalString(decimal)\n        );\n        if (util.lessThan(balance, totalOutputValue)) {\n          const msg = \"Insufficient ft balance\";\n          onTransferCallback({\n            error: msg,\n          });\n          return message.error(msg);\n        }\n        const formatReceiverList = data.receivers.map((item) => {\n          return {\n            address: item.address,\n            // amount: util.multi(item.amount, util.getDecimalString(decimal)),\n            amount: item.amount,\n          };\n        });\n        if (isBsv) {\n          const tx = await broadcastBsv({ formatReceiverList, noBroadcast: true });\n          const outputIndex = tx.outputs.length - 1;\n          //TODO: check res outputs\n          if (outputIndex !== 1) {\n            const msg = \"Insufficient ft balance\";\n            onTransferCallback({\n              error: msg,\n            });\n            return message.error(msg)\n          }\n          const output = tx.outputs[outputIndex];\n          txs.push([tx, true]);\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new bsv.PrivateKey(key.privateKey, account.network).toAddress(account.network),\n          });\n        } else {\n          const {routeCheckTx, tx} = await broadcastSensibleFt({\n              formatReceiverList,\n              token,\n              decimal,\n              genesis: data.genesis,\n              rabinApis,\n              utxos,\n              noBroadcast: true\n            });\n          txs.push([routeCheckTx, false]);\n          txs.push([tx, true]);\n          const outputIndex = tx.outputs.length - 1;\n          const output = tx.outputs[outputIndex];\n          utxos = [];\n          utxos.push({\n            txId: tx.id,\n            outputIndex,\n            satoshis: output.satoshis,\n            wif: key.privateKey,\n            address: new bsv.PrivateKey(key.privateKey, account.network).toAddress(account.network),\n          });\n        }\n      }\n\n      for (const txInfo of txs) {\n        const tx = txInfo[0]\n        const txHex = tx.serialize(true)\n        const res = await broadcastSensibleQeury(account.network, txHex)\n        if (txInfo[1] === true) {\n          const txParseRes = parseTransaction(account.network, txHex)\n          transferRes.push({\n            txid: res,\n            outputs: txParseRes.outputs,\n            fee: tx.getFee(),\n          })\n        }\n      }\n\n      setLoading(false);\n      onTransferCallback({\n        response: {\n          ...transferRes,\n        },\n      });\n    };\n\n    /*const broadcastAll = async () => {\n      const transferRes = [];\n      for (let i = 0; i < initDatas.length; i++) {\n        const data = initDatas[i];\n        const isBsv = !data.genesis;\n        const token = sensibleFtList.find(\n          (item) => item.genesis === data.genesis\n        );\n        const decimal = isBsv ? 8 : token.tokenDecimal;\n        const balance = isBsv ? bsvBalance.balance : token.balance;\n        const rabinApis = data.rabinApis;\n        const totalOutputValueFloatDuck = receiverLists[\n          `receiverList${i}`\n        ].reduce((prev, cur) => util.plus(prev, cur.amount), 0);\n\n        const totalOutputValue = util.multi(\n          totalOutputValueFloatDuck,\n          util.getDecimalString(decimal)\n        );\n        if (util.lessThan(balance, totalOutputValue)) {\n          const msg = \"Insufficient ft balance\";\n          onTransferCallback({\n            error: msg,\n          });\n          return message.error(msg);\n        }\n        const formatReceiverList = data.receivers.map((item) => {\n          return {\n            address: item.address,\n            // amount: util.multi(item.amount, util.getDecimalString(decimal)),\n            amount: item.amount,\n          };\n        });\n        const res = isBsv\n          ? await broadcastBsv({ formatReceiverList })\n          : await broadcastSensibleFt({\n              formatReceiverList,\n              token,\n              decimal,\n              genesis: data.genesis,\n              rabinApis\n            });\n        transferRes.push(res);\n        if(i < initDatas.length - 1) {\n          await sleep(2000);\n        }\n      }\n\n      setLoading(false);\n      onTransferCallback({\n        response: {\n          ...transferRes,\n        },\n      });\n    };*/\n\n    Modal.confirm({\n      title: \"Confirm the transaction\",\n      onOk: () => {\n        //broadcastAll();\n        broadcastBsvAndToken();\n      },\n    });\n  };\n  const handleBack = () => {\n    onCancel();\n  };\n  return (\n    <Card\n      className=\"card\"\n      title={\n        <div style={{ cursor: \"pointer\" }} onClick={handleBack}>\n          <LeftOutlined />\n          Transfer\n        </div>\n      }\n      loading={loading}\n      bordered={false}\n    >\n      <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n        {initDatas.map((data, index) => {\n          const isBsv = !data.genesis;\n          const token = sensibleFtList.find(\n            (item) => item.genesis === data.genesis\n          );\n\n          if (!isBsv && !token) {\n            return null;\n          }\n          const tokenSymbol = isBsv ? \"BSV\" : token.tokenSymbol;\n          const decimal = isBsv ? 8 : token.tokenDecimal;\n          const balance = isBsv ? bsvBalance.balance : token.balance;\n          const formatBalance = formatValue(balance, decimal);\n          const canEdit = !(data.receivers.length > 0);\n          return (\n            <div key={index}>\n              <div className=\"transfer-line\">\n                {isBsv ? `Coin: ${tokenSymbol}` : `Token: ${tokenSymbol}`}\n              </div>\n              {!isBsv && (\n                <div className=\"transfer-line\">Genesis: {token.genesis}</div>\n              )}\n              {!isBsv && (\n                <div className=\"transfer-line\">Codehash: {token.codehash}</div>\n              )}\n              <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n                <Col span={14}>\n                  <div style={{ fontWeight: 700 }}>Input</div>\n                </Col>\n              </Row>\n              <div className=\"transfer-line\">{`Balance: ${formatBalance}`}</div>\n              <div className=\"transfer-line\">{`From Address: ${key.address}`}</div>\n              <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n                <Col span={14}>\n                  <div style={{ fontWeight: 700 }}>Output</div>\n                </Col>\n              </Row>\n              <Form.List name={`receiverList${index}`}>\n                {(fields, { add, remove }) => (\n                  <>\n                    {fields.map((key, name, fieldKey, ...restField) => {\n                      return (\n                        <Space\n                          key={key.fieldKey}\n                          style={{ display: \"flex\", marginBottom: 8 }}\n                          align=\"baseline\"\n                        >\n                          <Form.Item\n                            {...restField}\n                            name={[name, \"address\"]}\n                            fieldKey={[fieldKey, \"address\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Please input the address\",\n                              },\n                              {\n                                message: \"invalid address\",\n                                validator: (_, value) =>\n                                  isValidAddress(account.network, value)\n                                    ? Promise.resolve()\n                                    : Promise.reject(),\n                              },\n                            ]}\n                          >\n                            <Input\n                              placeholder=\"Input the address\"\n                              disabled={!canEdit}\n                            />\n                          </Form.Item>\n                          <Form.Item\n                            {...restField}\n                            name={[name, \"amount\"]}\n                            fieldKey={[fieldKey, \"amount\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Please input amount\",\n                              },\n                            ]}\n                          >\n                            <InputNumber\n                              placeholder=\"Amount\"\n                              min={0}\n                              disabled={!canEdit}\n                            />\n                          </Form.Item>\n                          <Button\n                            disabled={!canEdit}\n                            size=\"small\"\n                            onClick={() => remove(name)}\n                            shape=\"circle\"\n                            icon={<MinusOutlined />}\n                          />\n                        </Space>\n                      );\n                    })}\n\n                    <Form.Item>\n                      <Button\n                        type=\"dashed\"\n                        onClick={() => add()}\n                        icon={<PlusOutlined />}\n                        disabled={!canEdit}\n                      >\n                        Add Output\n                      </Button>\n                    </Form.Item>\n                  </>\n                )}\n              </Form.List>\n            </div>\n          );\n        })}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block>\n            Transfer\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction TransferPanel({\n  genesis = \"\",\n  initReceivers = [],\n  rabinApis = [],\n  onCancel,\n  onTransferCallback,\n}) {\n  const [key] = useGlobalState(\"key\");\n  const [bsvBalance] = useGlobalState(\"bsvBalance\");\n  const [account] = useGlobalState(\"account\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const canEdit = !(initReceivers.length > 0);\n\n  useOnceCall(() => {\n    const isBsv = genesis === \"\";\n    const token = sensibleFtList.find((item) => item.genesis === genesis);\n    const decimal = isBsv ? 8 : token.tokenDecimal;\n    console.log(\n      \"initReceivers\",\n      initReceivers,\n      initReceivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.multi(item.amount, util.getDecimalString(decimal)),\n        };\n      })\n    );\n    form.setFieldsValue({\n      receiverList: initReceivers.map((item) => {\n        return {\n          address: item.address,\n          amount: util.div(item.amount, util.getDecimalString(decimal)),\n        };\n      }),\n    });\n  }, key && bsvBalance && initReceivers.length);\n\n  if (!key) {\n    return null;\n  }\n  if (!bsvBalance) {\n    return null;\n  }\n  if (genesis && !sensibleFtList.length) {\n    return null;\n  }\n\n  const isBsv = genesis === \"\";\n  const token = sensibleFtList.find((item) => item.genesis === genesis);\n\n  if (!isBsv && !token) {\n    return null;\n  }\n  const tokenSymbol = isBsv ? \"BSV\" : token.tokenSymbol;\n  const decimal = isBsv ? 8 : token.tokenDecimal;\n  const balance = isBsv ? bsvBalance.balance : token.balance;\n  const formatBalance = formatValue(balance, decimal);\n\n  const handleSubmit = async () => {\n    const { receiverList } = form.getFieldsValue();\n    const totalOutputValueFloatDuck = receiverList.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n\n    const totalOutputValue = util.multi(\n      totalOutputValueFloatDuck,\n      util.getDecimalString(decimal)\n    );\n    if (util.lessThan(balance, totalOutputValue)) {\n      const msg = \"Insufficient ft balance\";\n      onTransferCallback({\n        error: msg,\n      });\n      return message.error(msg);\n    }\n    const formatReceiverList = receiverList.map((item) => {\n      return {\n        address: item.address,\n        amount: util.multi(item.amount, util.getDecimalString(decimal)),\n      };\n    });\n\n    const broadcastBsv = async () => {\n      setLoading(true);\n      let txid = \"\";\n      let transferRes;\n      try {\n        const res = await await transferBsv(\n          account.network,\n          key.privateKey,\n          formatReceiverList\n        );\n        transferRes = res;\n        txid = res.txid;\n      } catch (err) {\n        const msg = \"broadcast error: \" + err.toString();\n        console.log(\n          util.safeJsonStringify({\n            type: \"bsvTransferFail\",\n            msg,\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            receivers: formatReceiverList,\n          })\n        );\n        Sentry.captureException(err);\n        Sentry.captureMessage(`bsvTransferFail_${key.address}`);\n        onTransferCallback({\n          error: msg,\n        });\n        console.log(\"broadcast bsv error \");\n        console.error(err);\n        message.error(err.toString());\n      }\n      setLoading(false);\n      if (txid) {\n        console.log(\n          util.safeJsonStringify({\n            type: \"bsvTransferSuccess\",\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            receivers: formatReceiverList,\n            txid,\n            ...transferRes,\n          })\n        );\n        Sentry.captureMessage(`bsvTransferSuccess_${key.address}_${txid}`);\n        onTransferCallback({\n          response: {\n            ...transferRes,\n          },\n        });\n        Modal.success({\n          title: \"Transaction broadcast success\",\n          content: (\n            <div>\n              txid:{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={getWocTransactionUrl(account.network, txid)}\n              >\n                {txid}\n              </a>\n            </div>\n          ),\n        });\n      }\n    };\n\n    const broadcastSensibleFt = async () => {\n      setLoading(true);\n      let txid = \"\";\n      let transferRes;\n      try {\n        const rabins = await getRabins(rabinApis);\n\n        const res = await transferSensibleFt(\n          account.network,\n          // signers,\n          rabins,\n          key.privateKey,\n          formatReceiverList,\n          token.codehash,\n          token.genesis\n        );\n        transferRes = res;\n        txid = res.txid;\n      } catch (err) {\n        console.log(\"broadcast sensible ft error \");\n        console.error(err);\n        message.error(err.toString());\n        console.log(\n          util.safeJsonStringify({\n            type: \"ftTransferFail\",\n            msg: util.safeJsonStringify(err.message),\n            account: {\n              network: account.network,\n              address: key.address,\n            },\n            genesis: token.genesis,\n            codehash: token.codehash,\n            receivers: formatReceiverList,\n          })\n        );\n        Sentry.captureException(err);\n        Sentry.captureMessage(\n          `ftTransferFail_${key.address}_${token.genesis}_${token.genesis}`\n        );\n        onTransferCallback({\n          error: err.toString(),\n        });\n      }\n      setLoading(false);\n      if (txid) {\n        console.log(\n          util.safeJsonStringify({\n            type: \"ftTransferSuccess,\",\n            account: {\n              network: account.network,\n              address: key.address,\n              genesis: token.genesis,\n              codehash: token.codehash,\n            },\n            receivers: formatReceiverList,\n            txid,\n            ...transferRes,\n          })\n        );\n        Sentry.captureMessage(`ftTransferSuccess_${key.address}_${txid}`);\n        onTransferCallback({\n          response: {\n            ...transferRes,\n          },\n        });\n        Modal.success({\n          title: \"Transaction broadcast success\",\n          content: (\n            <div>\n              txid:{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={getWocTransactionUrl(account.network, txid)}\n              >\n                {txid}\n              </a>\n            </div>\n          ),\n        });\n      }\n    };\n\n    Modal.confirm({\n      title: \"Confirm the transaction\",\n      onOk: () => {\n        isBsv ? broadcastBsv() : broadcastSensibleFt();\n      },\n    });\n  };\n  const handleBack = () => {\n    onCancel();\n  };\n\n  return (\n    <Card\n      className=\"card\"\n      title={\n        <div style={{ cursor: \"pointer\" }} onClick={handleBack}>\n          <LeftOutlined />\n          Transfer\n        </div>\n      }\n      loading={loading}\n      bordered={false}\n    >\n      <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n        <div className=\"transfer-line\">\n          {isBsv ? `Coin: ${tokenSymbol}` : `Token: ${tokenSymbol}`}\n        </div>\n        {!isBsv && (\n          <div className=\"transfer-line\">Genesis: {token.genesis}</div>\n        )}\n        {!isBsv && (\n          <div className=\"transfer-line\">Codehash: {token.codehash}</div>\n        )}\n        <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n          <Col span={14}>\n            <div style={{ fontWeight: 700 }}>Input</div>\n          </Col>\n        </Row>\n        <div className=\"transfer-line\">{`Balance: ${formatBalance}`}</div>\n        <div className=\"transfer-line\">{`From Address: ${key.address}`}</div>\n        <Row justify=\"space-between\" style={{ margin: \"10px 0\" }}>\n          <Col span={14}>\n            <div style={{ fontWeight: 700 }}>Output</div>\n          </Col>\n        </Row>\n        <Form.List name=\"receiverList\">\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map((key, name, fieldKey, ...restField) => {\n                return (\n                  <Space\n                    key={key.fieldKey}\n                    style={{ display: \"flex\", marginBottom: 8 }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...restField}\n                      name={[name, \"address\"]}\n                      fieldKey={[fieldKey, \"address\"]}\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please input the address\",\n                        },\n                        {\n                          message: \"invalid address\",\n                          validator: (_, value) =>\n                            isValidAddress(account.network, value)\n                              ? Promise.resolve()\n                              : Promise.reject(),\n                        },\n                      ]}\n                    >\n                      <Input\n                        placeholder=\"Input the address\"\n                        disabled={!canEdit}\n                      />\n                    </Form.Item>\n                    <Form.Item\n                      {...restField}\n                      name={[name, \"amount\"]}\n                      fieldKey={[fieldKey, \"amount\"]}\n                      rules={[\n                        { required: true, message: \"Please input amount\" },\n                      ]}\n                    >\n                      <InputNumber\n                        placeholder=\"Amount\"\n                        min={0}\n                        disabled={!canEdit}\n                      />\n                    </Form.Item>\n                    <Button\n                      disabled={!canEdit}\n                      size=\"small\"\n                      onClick={() => remove(name)}\n                      shape=\"circle\"\n                      icon={<MinusOutlined />}\n                    />\n                  </Space>\n                );\n              })}\n\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  icon={<PlusOutlined />}\n                  disabled={!canEdit}\n                >\n                  Add Output\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" block>\n            Transfer\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    actions.recoverAccountFromStorage();\n  }, []);\n\n  const [trasfering, setTransfering] = useState(false);\n  const [trasferSensibleFtGenesis, setTrasferSensibleFtGenesis] = useState(\"\");\n  const [account] = useGlobalState(\"account\");\n  const [key] = useGlobalState(\"key\");\n  const [bsvBalance] = useGlobalState(\"bsvBalance\");\n  const [sensibleFtList] = useGlobalState(\"sensibleFtList\");\n  const [initReceivers, setInitReceivers] = useState([]);\n  const [initDatas, setInitDatas] = useState([]);\n  const [initRabins, setRabins] = useState([]);\n\n  const handleTransfer = (genesis) => {\n    setTransfering(true);\n    genesis && setTrasferSensibleFtGenesis(genesis);\n  };\n  const handleCancelTransfer = () => {\n    setTransfering(false);\n    setTrasferSensibleFtGenesis(\"\");\n  };\n\n  const getHashData = () => {\n    if (!window.opener) {\n      return null;\n    }\n    const hash = window.location.hash.substr(1);\n    try {\n      const data = JSON.parse(decodeURIComponent(hash));\n      if (data.type === \"popup\") {\n        if (typeof data.data === \"object\") {\n          return data;\n        }\n      }\n    } catch (err) {}\n    return null;\n  };\n  const handlePopResponseCallback = (resObj) => {\n    const data = getHashData();\n    if (!data) {\n      return;\n    }\n    const postMsg = createPostMsg(window.opener, \"*\");\n    postMsg.emit(data.id, {\n      type: \"response\",\n      data: {\n        ...data.data.data,\n        ...resObj,\n      },\n    });\n  };\n\n  // todo 数值计算 使用 bignumber\n  // todo 此处接收 postMessage 消息，处理登录,transfer\n  const requestAccountCondition = key?.address && account?.network;\n  const transferBsvCondition =\n    requestAccountCondition &&\n    bsvBalance &&\n    util.greaterThanEqual(bsvBalance.balance, 0);\n  useOnceCall(() => {\n    const data = getHashData();\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"requestAccount\") {\n      return;\n    }\n    Modal.confirm({\n      title: \"Connect\",\n      content: (\n        <div>\n          Allow <b>{params.name}</b> to connect your web wallet\n        </div>\n      ),\n      onOk: () => {\n        handlePopResponseCallback({ response: true });\n      },\n      onCancel: () => {\n        handlePopResponseCallback({ error: \"user reject\" });\n      },\n    });\n  }, !!requestAccountCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"bsv hash data\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferBsv\") {\n      return;\n    }\n    // balance check\n    const outputTotal = params.receivers.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n    if (util.greaterThan(outputTotal, bsvBalance.balance)) {\n      handlePopResponseCallback({ error: \"insufficient bsv balance\" });\n      return;\n    }\n    setTransfering(true);\n    setInitReceivers(params.receivers);\n  }, !!transferBsvCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"hashdata\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferSensibleFt\") {\n      return;\n    }\n    // sensibleft balance check\n    const outputTotal = params.receivers.reduce(\n      (prev, cur) => util.plus(prev, cur.amount),\n      0\n    );\n    console.log(\"outputTotal\", outputTotal);\n    const ft = sensibleFtList.find((item) => item.genesis === params.genesis);\n    console.log(\"ft\", ft);\n    if (!ft) {\n      handlePopResponseCallback({ error: \"insufficient ft balance\" });\n      return;\n    }\n    if (util.greaterThan(outputTotal, ft.balance)) {\n      handlePopResponseCallback({ error: \"insufficient ft balance\" });\n      return;\n    }\n    setTransfering(true);\n    setTrasferSensibleFtGenesis(params.genesis);\n    setInitReceivers(params.receivers);\n    setRabins(params.rabinApis);\n  }, !!transferBsvCondition);\n  useOnceCall(() => {\n    const data = getHashData();\n    console.log(\"bsv hash data\", data);\n    if (!data || data.data.type !== \"request\") {\n      return;\n    }\n\n    const { method, params } = data.data.data;\n    if (method !== \"transferAll\") {\n      return;\n    }\n    // balance check\n    params.datas.forEach((item) => {\n      // balance check\n      const isBsv = !item.genesis;\n      const ft = sensibleFtList.find((v) => v.genesis === item.genesis);\n\n      const outputTotal = item.receivers.reduce(\n        (prev, cur) => util.plus(prev, cur.amount),\n        0\n      );\n      if (isBsv && util.greaterThan(outputTotal, bsvBalance.balance)) {\n        handlePopResponseCallback({ error: \"insufficient bsv balance\" });\n        return;\n      }\n      if (ft && util.greaterThan(outputTotal, ft.balance)) {\n        handlePopResponseCallback({ error: \"insufficient ft balance\" });\n        return;\n      }\n      setTransfering(true);\n      // console.log(params.datas);\n      setInitDatas(params.datas);\n    });\n  }, !!transferBsvCondition);\n  useEffect(() => {\n    const obu = window.onbeforeunload;\n    window.onbeforeunload = function (event) {\n      handlePopResponseCallback({ error: \"use closed\" });\n      return obu && obu(event);\n    };\n  });\n  return (\n    <div className=\"App\" style={{ overflow: \"hidden\" }}>\n      <Header accountName=\"harry\" />\n      <LoginPanel />\n      {!trasfering && <AccountInfoPanel onTransfer={handleTransfer} />}\n      {trasfering &&\n        (!initDatas || initDatas.length < 1 ? (\n          <TransferPanel\n            genesis={trasferSensibleFtGenesis}\n            rabinApis={initRabins}\n            onCancel={handleCancelTransfer}\n            onTransferCallback={handlePopResponseCallback}\n            initReceivers={initReceivers}\n          />\n        ) : (\n          <TransferAllPanel\n            onCancel={handleCancelTransfer}\n            onTransferCallback={handlePopResponseCallback}\n            initDatas={initDatas}\n          />\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as actions from \"./state/action\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport { SensibleApi } from \"sensible-sdk\";\nimport { bsv } from \"scryptlib\";\n\n(function () {\n  const originBroadcast = SensibleApi.prototype.broadcast;\n  SensibleApi.prototype.broadcast = async function (hex) {\n    const txid = new bsv.Transaction(hex).hash;\n    const txMsg = `txid: ${txid}; rawtx: ${hex}`;\n    console.log(\"sensible-sdk 广播\", txMsg);\n    try {\n      const res = await originBroadcast.call(this, hex);\n      return res;\n    } catch (err) {\n      console.log(\"sensible-sdk 广播错误\", txMsg);\n      const newError = new Error(\n        `${err.message} sensible-sdk 广播错误 ${txMsg}`\n      );\n      setTimeout(() => {\n        throw newError;\n      }, 0);\n      throw err;\n    }\n  };\n})();\n\nconst isIframe = window === window.top;\n\nSentry.init({\n  dsn: \"https://d223c2a1d1bf44b6a657051ac9a99b16@o877284.ingest.sentry.io/5827823\",\n  integrations: [new Integrations.BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nif (isIframe) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n} else {\n  actions.runIframeTask();\n}\n\n// delete account when page/iframe exit\n(function () {\n  const obu = window.onbeforeunload;\n  window.onbeforeunload = function (event) {\n    const isPopup = !!window.opener;\n    if (!isPopup) {\n      actions.saveAccount(null);\n    }\n    return obu && obu(event);\n  };\n})();\n\n// alert(window === window.top);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}